# for running in docker compose with prebuilt images

# version is now using "compose spec"
# v2 and v3 are now combined!
# docker-compose v1.27+ required

services:
  vote:
    image: vinaybalepur/voteui:1
    depends_on:
      redis:
        condition: service_healthy 
    ports:
      - "80"
    networks:
      - front-tier
      - back-tier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://vote:80"]
      interval: 10s
      timeout: 10s
      retries: 2

  result:
    image: vinaybalepur/voteresultui:1
    depends_on:
      db:
        condition: service_healthy 
    ports:
      - "8081:80"
    networks:
      - front-tier
      - back-tier
  
  nginx:
    image: vinaybalepur/ngixnmatrix:1
    ports:
      - "80:80"
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d"
    networks:
      - front-tier
      - back-tier
    depends_on:
      vote:
        condition: service_healthy
  worker:
    image: vinaybalepur/voteworker:1
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    networks:
      - back-tier

  redis:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - 9091:9091

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
